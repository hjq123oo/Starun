apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.starun.www.starun"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug{
            testCoverageEnabled true
        }
    }

    jacoco {
        version "0.7.4.201502262128"
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/locSDK_6.13.jar')
    compile files('libs/baidumapapi_util_v3_7_0.jar')
    compile files('libs/baidumapapi_search_v3_7_0.jar')
    compile files('libs/baidumapapi_radar_v3_7_0.jar')
    compile files('libs/baidumapapi_map_v3_7_0.jar')
    compile files('libs/baidumapapi_cloud_v3_7_0.jar')
    compile files('libs/baidumapapi_base_v3_7_0.jar')
    compile files('libs/BaiduTraceSDK_v2_1_7.jar')
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.roughike:bottom-bar:1.2.4'
    compile 'com.android.support:support-v4:23.2.1'


}



apply plugin: 'jacoco'


task jacocoTestReport(type:JacocoReport,dependsOn:"connectedAndroidTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = false
        html.enabled = true
        csv.enabled = false
    }
    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: [
                    '**/*Test.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*'
            ]
    )
    def coverageSourceDirs = ['src/main/java']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    additionalClassDirs = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/code-coverage/connected/coverage.ec")
}